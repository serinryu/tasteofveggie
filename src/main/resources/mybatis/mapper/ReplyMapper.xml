<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.repository.ReplyRepository">
    <select id="findAllByBlogId" resultType="com.example.blog.entity.Reply" parameterType="long">
        SELECT
            reply_id as replyId,
            blog_id as blogId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            blog_id = #{blogId}
    </select>
    <select id="findByReplyId" resultType="com.example.blog.entity.Reply" parameterType="long">
        SELECT
            reply_id as replyId,
            blog_id as blogId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            reply_id = #{replyId}
    </select>
    <delete id="deleteByReplyId" parameterType="long">
        DELETE FROM
            reply
        WHERE
            reply_id = #{replyId}
    </delete>
    <delete id="deleteAllByBlodId" parameterType="long">
        DELETE FROM
            reply
        WHERE
            blog_id = #{blogId}
    </delete>
    <insert id="save" parameterType="com.example.blog.entity.Reply">
        INSERT INTO
            REPLY (blog_id, reply_writer, reply_content)
        VALUES
            (#{blogId}, #{replyWriter}, #{replyContent})
    </insert>
    <update id="update" parameterType="com.example.blog.entity.Reply">
        UPDATE
            REPLY
        SET
            reply_content = #{replyContent}
        WHERE
            reply_id = #{replyId}
    </update>
</mapper>